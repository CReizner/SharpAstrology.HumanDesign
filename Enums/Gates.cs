namespace SharpAstrology.Enums;

public enum Gates
{
    Key17 = 0,
    Key21 = 1,
    Key51 = 2,
    Key42 = 3,
    Key3 = 4,
    Key27 = 5,
    Key24 = 6,
    Key2 = 7,
    Key23 = 8,
    Key8 = 9,
    Key20 = 10,
    Key16 = 11,
    Key35 = 12,
    Key45 = 13,
    Key12 = 14,
    Key15 = 15,
    Key52 = 16,
    Key39 = 17,
    Key53 = 18,
    Key62 = 19,
    Key56 = 20,
    Key31 = 21,
    Key33 = 22,
    Key7 = 23,
    Key4 = 24,
    Key29 = 25,
    Key59 = 26,
    Key40 = 27,
    Key64 = 28,
    Key47 = 29,
    Key6 = 30,
    Key46 = 31,
    Key18 = 32,
    Key48 = 33,
    Key57 = 34,
    Key32 = 35,
    Key50 = 36,
    Key28 = 37,
    Key44 = 38,
    Key1 = 39,
    Key43 = 40,
    Key14 = 41,
    Key34 = 42,
    Key9 = 43,
    Key5 = 44,
    Key26 = 45,
    Key11 = 46,
    Key10 = 47,
    Key58 = 48,
    Key38 = 49,
    Key54 = 50,
    Key61 = 51,
    Key60 = 52,
    Key41 = 53,
    Key19 = 54,
    Key13 = 55,
    Key49 = 56,
    Key30 = 57,
    Key55 = 58,
    Key37 = 59,
    Key63 = 60,
    Key22 = 61,
    Key36 = 62,
    Key25 = 63,
}

public static class GatesExtensionMethods
{
    public static Centers GetCenter(this Gates key) => key switch
        {
            Gates.Key1 => Centers.Self,
            Gates.Key2 => Centers.Self,
            Gates.Key3 => Centers.Sacral,
            Gates.Key4 => Centers.Mind,
            Gates.Key5 => Centers.Sacral,
            Gates.Key6 => Centers.Emotions,
            Gates.Key7 => Centers.Self,
            Gates.Key8 => Centers.Throat,
            Gates.Key9 => Centers.Sacral,
            Gates.Key10 => Centers.Self,
            Gates.Key11 => Centers.Mind,
            Gates.Key12 => Centers.Throat,
            Gates.Key13 => Centers.Self,
            Gates.Key14 => Centers.Sacral,
            Gates.Key15 => Centers.Self,
            Gates.Key16 => Centers.Throat,
            Gates.Key17 => Centers.Mind,
            Gates.Key18 => Centers.Spleen,
            Gates.Key19 => Centers.Root,
            Gates.Key20 => Centers.Throat,
            Gates.Key21 => Centers.Heart,
            Gates.Key22 => Centers.Emotions,
            Gates.Key23 => Centers.Throat,
            Gates.Key24 => Centers.Mind,
            Gates.Key25 => Centers.Self,
            Gates.Key26 => Centers.Heart,
            Gates.Key27 => Centers.Sacral,
            Gates.Key28 => Centers.Spleen,
            Gates.Key29 => Centers.Sacral,
            Gates.Key30 => Centers.Emotions,
            Gates.Key31 => Centers.Throat,
            Gates.Key32 => Centers.Spleen,
            Gates.Key33 => Centers.Throat,
            Gates.Key34 => Centers.Sacral,
            Gates.Key35 => Centers.Throat,
            Gates.Key36 => Centers.Emotions,
            Gates.Key37 => Centers.Emotions,
            Gates.Key38 => Centers.Root,
            Gates.Key39 => Centers.Root,
            Gates.Key40 => Centers.Heart,
            Gates.Key41 => Centers.Root,
            Gates.Key42 => Centers.Sacral,
            Gates.Key43 => Centers.Mind,
            Gates.Key44 => Centers.Spleen,
            Gates.Key45 => Centers.Throat,
            Gates.Key46 => Centers.Self,
            Gates.Key47 => Centers.Mind,
            Gates.Key48 => Centers.Spleen,
            Gates.Key49 => Centers.Emotions,
            Gates.Key50 => Centers.Spleen,
            Gates.Key51 => Centers.Heart,
            Gates.Key52 => Centers.Root,
            Gates.Key53 => Centers.Root,
            Gates.Key54 => Centers.Root,
            Gates.Key55 => Centers.Emotions,
            Gates.Key56 => Centers.Throat,
            Gates.Key57 => Centers.Spleen,
            Gates.Key58 => Centers.Root,
            Gates.Key59 => Centers.Sacral,
            Gates.Key60 => Centers.Root,
            Gates.Key61 => Centers.Crown,
            Gates.Key62 => Centers.Throat,
            Gates.Key63 => Centers.Crown,
            Gates.Key64 => Centers.Crown
        };

    public static int ToNumber(this Gates key) => key switch
        {
            Gates.Key1 => 1,
            Gates.Key2 => 2,
            Gates.Key3 => 3,
            Gates.Key4 => 4,
            Gates.Key5 => 5,
            Gates.Key6 => 6,
            Gates.Key7 => 7,
            Gates.Key8 => 8,
            Gates.Key9 => 9,
            Gates.Key10 => 10,
            Gates.Key11 => 11,
            Gates.Key12 => 12,
            Gates.Key13 => 13,
            Gates.Key14 => 14,
            Gates.Key15 => 15,
            Gates.Key16 => 16,
            Gates.Key17 => 17,
            Gates.Key18 => 18,
            Gates.Key19 => 19,
            Gates.Key20 => 20,
            Gates.Key21 => 21,
            Gates.Key22 => 22,
            Gates.Key23 => 23,
            Gates.Key24 => 24,
            Gates.Key25 => 25,
            Gates.Key26 => 26,
            Gates.Key27 => 27,
            Gates.Key28 => 28,
            Gates.Key29 => 29,
            Gates.Key30 => 30,
            Gates.Key31 => 31,
            Gates.Key32 => 32,
            Gates.Key33 => 33,
            Gates.Key34 => 34,
            Gates.Key35 => 35,
            Gates.Key36 => 36,
            Gates.Key37 => 37,
            Gates.Key38 => 38,
            Gates.Key39 => 39,
            Gates.Key40 => 40,
            Gates.Key41 => 41,
            Gates.Key42 => 42,
            Gates.Key43 => 43,
            Gates.Key44 => 44,
            Gates.Key45 => 45,
            Gates.Key46 => 46,
            Gates.Key47 => 47,
            Gates.Key48 => 48,
            Gates.Key49 => 49,
            Gates.Key50 => 50,
            Gates.Key51 => 51,
            Gates.Key52 => 52,
            Gates.Key53 => 53,
            Gates.Key54 => 54,
            Gates.Key55 => 55,
            Gates.Key56 => 56,
            Gates.Key57 => 57,
            Gates.Key58 => 58,
            Gates.Key59 => 59,
            Gates.Key60 => 60,
            Gates.Key61 => 61,
            Gates.Key62 => 62,
            Gates.Key63 => 63,
            Gates.Key64 => 64
        };

    public static byte[] ToByte(this Gates key) => key switch
    {
        Gates.Key1 => new byte[] {1, 1, 1, 1, 1, 1},
        Gates.Key2 => new byte[] {0, 0, 0, 0, 0, 0},
        Gates.Key3 => new byte[] {0, 1, 0, 0, 0, 1},
        Gates.Key4 => new byte[] {1, 0, 0, 0, 1, 0},
        Gates.Key5 => new byte[] {0, 1, 0, 1, 1, 1},
        Gates.Key6 => new byte[] {1, 1, 1, 0, 1, 0},
        Gates.Key7 => new byte[] {0, 0, 0, 0, 1, 0},
        Gates.Key8 => new byte[] {0, 1, 0, 0, 0, 0},
        Gates.Key9 => new byte[] {1, 1, 0, 1, 1, 1},
        Gates.Key10 => new byte[] {1, 1, 1, 0, 1, 1},
        Gates.Key11 => new byte[] {0, 0, 0, 1, 1, 1},
        Gates.Key12 => new byte[] {1, 1, 1, 0, 0, 0},
        Gates.Key13 => new byte[] {1, 1, 1, 1, 0, 1},
        Gates.Key14 => new byte[] {1, 0, 1, 1, 1, 1},
        Gates.Key15 => new byte[] {0, 0, 0, 1, 0, 0},
        Gates.Key16 => new byte[] {0, 0, 1, 0, 0, 0},
        Gates.Key17 => new byte[] {0, 1, 1, 0, 0, 1},
        Gates.Key18 => new byte[] {1, 0, 0, 1, 1, 0},
        Gates.Key19 => new byte[] {0, 0, 0, 0, 1, 1},
        Gates.Key20 => new byte[] {1, 1, 0, 0, 0, 0},
        Gates.Key21 => new byte[] {1, 0, 1, 0, 0, 1},
        Gates.Key22 => new byte[] {1, 0, 0, 1, 0, 1},
        Gates.Key23 => new byte[] {1, 0, 0, 0, 0, 0},
        Gates.Key24 => new byte[] {0, 0, 0, 0, 0, 1},
        Gates.Key25 => new byte[] {1, 1, 1, 0, 0, 1},
        Gates.Key26 => new byte[] {1, 0, 0, 1, 1, 1},
        Gates.Key27 => new byte[] {1, 0, 0, 0, 0, 1},
        Gates.Key28 => new byte[] {0, 1, 1, 1, 1, 0},
        Gates.Key29 => new byte[] {0, 1, 0, 0, 1, 0},
        Gates.Key30 => new byte[] {1, 0, 1, 1, 0, 1},
        Gates.Key31 => new byte[] {0, 1, 1, 1, 0, 0},
        Gates.Key32 => new byte[] {0, 0, 1, 1, 1, 0},
        Gates.Key33 => new byte[] {1, 1, 1, 1, 0, 0},
        Gates.Key34 => new byte[] {0, 0, 1, 1, 1, 1},
        Gates.Key35 => new byte[] {1, 0, 1, 0, 0, 0},
        Gates.Key36 => new byte[] {0, 0, 0, 1, 0, 1},
        Gates.Key37 => new byte[] {1, 1, 0, 1, 0, 1},
        Gates.Key38 => new byte[] {1, 0, 1, 0, 1, 1},
        Gates.Key39 => new byte[] {0, 1, 0, 1, 0, 0},
        Gates.Key40 => new byte[] {0, 0, 1, 0, 1, 0},
        Gates.Key41 => new byte[] {1, 0, 0, 0, 1, 1},
        Gates.Key42 => new byte[] {1, 1, 0, 0, 0, 1},
        Gates.Key43 => new byte[] {0, 1, 1, 1, 1, 1},
        Gates.Key44 => new byte[] {1, 1, 1, 1, 1, 0},
        Gates.Key45 => new byte[] {0, 1, 1, 0, 0, 0},
        Gates.Key46 => new byte[] {0, 0, 0, 1, 1, 0},
        Gates.Key47 => new byte[] {0, 1, 1, 0, 1, 0},
        Gates.Key48 => new byte[] {0, 1, 0, 1, 1, 0},
        Gates.Key49 => new byte[] {0, 1, 1, 1, 0, 1},
        Gates.Key50 => new byte[] {1, 0, 1, 1, 1, 0},
        Gates.Key51 => new byte[] {0, 0, 1, 0, 0, 1},
        Gates.Key52 => new byte[] {1, 0, 0, 1, 0, 0},
        Gates.Key53 => new byte[] {1, 1, 0, 1, 0, 0},
        Gates.Key54 => new byte[] {0, 0, 1, 0, 1, 1},
        Gates.Key55 => new byte[] {0, 0, 1, 1, 0, 1},
        Gates.Key56 => new byte[] {1, 0, 1, 1, 0, 0},
        Gates.Key57 => new byte[] {1, 1, 0, 1, 1, 0},
        Gates.Key58 => new byte[] {0, 1, 1, 0, 1, 1},
        Gates.Key59 => new byte[] {1, 1, 0, 0, 1, 0},
        Gates.Key60 => new byte[] {0, 1, 0, 0, 1, 1},
        Gates.Key61 => new byte[] {1, 1, 0, 0, 1, 1},
        Gates.Key62 => new byte[] {0, 0, 1, 1, 0, 0},
        Gates.Key63 => new byte[] {0, 1, 0, 1, 0, 1},
        Gates.Key64 => new byte[] {1, 0, 1, 0, 1, 0}
    };
}